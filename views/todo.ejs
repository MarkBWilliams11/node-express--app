<%- include("./partials/head.ejs") -%>

  <body>
    <%- include("./partials/nav.ejs") -%>
      <!-- Showcase -->
      <div class="container">
        <div class="text-center">
          <h1>
            <%= title %>
          </h1>
          </p>
          <p class="lead">
            <%= message %>
          </p>
        </div>
      </div>

      <!-- Todo form -->
      <section class="container-lg ">
        <div class="row justify-content-center my-5">
          <div class="col-lg-6 todo-alert">
            <form id="todo-form">

              <!-- name group -->
              <label for="todo_task" class="form-label">Todo Task:</label>
              <div class="input-group mb-4">
                <span class="input-group-text">
                  <i class="bi bi-person-fill"></i>
                </span>
                <input type="text" class="form-control" id="todo_task" name="todo_task" placeholder="Enter your todo">
              </div>
              <!-- question selection group -->
              <label for="priority" class="form-label">Task priority?</label>
              <div class="input-group mb-4">
                <span class="input-group-text">
                  <i class="bi bi-chat-left-dots-fill"></i>
                </span>
                <select name="priority" id="priority" class="form-select">
                  <option value="high-priority">High Priority</option>
                  <option value="medium-priority">Medium Priority</option>
                  <option value="low-priority" selected>Low Priority</option>
                </select>
              </div>
              <!-- question textarea group -->
              <label for="body" class="form-label">Enter task details?</label>
              <textarea id="body" cols="30" rows="10" class="form-control" name="body"></textarea>
              <div class="mt-3 mb-4 text-center">
                <button type="submit" class="btn btn-primary text-light ">New Task</button>
              </div>
            </form>

      </section>

      <!-- display the todo section -->

      <section>

        <div class="text-center">
          <h3>List of Todos</h3>
          <!--  cards-->
          <div id="todos" class="row row-cols-1 row-cols-lg-3 g-4">


          </div>
          <!--  cards end-->

        </div>
      </section>

      <!-- sidebar -->
      <%- include("./partials/sidebar.ejs") -%>
        <!-- footer -->
        <%- include("./partials/footer.ejs") -%>
          <!-- js -->
          <%- include("./partials/bootstrapjs.ejs") -%>
            <!-- todo js -->
            <script>
                         //Todo Class: todo model
              class Todo {
                constructor(id, todo_task, priority, body) {
                  this.id = id;
                  this.todo_task = todo_task;
                  this.priority = priority;
                  this.body = body;

                }
              }

              //UI class: Hanldle UI tasks
              class TodoUI {
                static displayTodos() {
                              const todos = Store.getTodos();

                  todos.forEach((todo) => TodoUI.newTodo(todo))
                }

                ///render new todo
                static newTodo(todo) {
                  const todo_list = document.querySelector("#todos");
                  const newTodoCard = document.createElement("div");
                  newTodoCard.innerHTML = `   <div class="col" >
              <div class="card h-100">

                <div id="todoKey" class="card-body" data-id="${todo.id}">
                  <h5 class="card-title">${todo.id}</h5>
                  <h5 class="card-title">${todo.todo_task}</h5>
                  <p class="card-text">${todo.priority}</p>
                  <p class="card-text">${todo.body}</p>
                  <a href="#" class="btn btn-danger remove">Remove</a>

                </div>
                <div class="card-footer">
                  <small class="text-muted">Last updated 3 mins ago</small>
                </div>
              </div>
            </div>
    `;
               
                  todo_list.appendChild(newTodoCard);

                }
                //validateMsg
                static validateMsg(msg, className) {
                  const validDiv = document.createElement("div");
                  /* <div class="alert alert-success">The message</div> */
                  validDiv.className = `alert alert-${className}`
                  validDiv.appendChild(document.createTextNode(msg));
                  const validContent = document.querySelector(".todo-alert");
                  const todoForm = document.querySelector("#todo-form");
                  validContent.insertBefore(validDiv, todoForm)

                  //alert timer

                  setTimeout(() => document.querySelector(".alert").remove(), 3000)

                }
                //clear form function
                static clearForm() {
                  document.querySelector("#todo_task").value = "";
                  document.querySelector("#priority").value = "";
                  document.querySelector("#body").value = "";
                }

                //remove todo
                static removeTodo(tarEl) {
                  if (tarEl.classList.contains("remove")) {
               tarEl.parentElement.parentElement.parentElement.remove()
                  }
                }


              }

              // localstorage for todo
              class Store {
                //get todo
                static getTodos() {
                  let todos;
                  if (localStorage.getItem("todos") === null) {
                    todos = [];
                  } else {
                    todos = JSON.parse(localStorage.getItem("todos"));
                  }
                  return todos;
                }

                //add todo
                static addTodo(todo) {
                  const todos = Store.getTodos();
                  todos.push(todo);
                  localStorage.setItem("todos", JSON.stringify(todos));
                }

                //remove todo
                static removeStoreTodo(id) {
                  const todos = Store.getTodos();
                  todos.forEach((todo, index) => {
                    if (todo.id === id) {
                      todos.splice(index, 1);
                    }
                  })
                  localStorage.setItem("todos", JSON.stringify(todos));
                }

              }
              
              //event to display todo
              document.addEventListener("DOMContentLoaded", TodoUI.displayTodos);

              //event to add todo
              document.querySelector("#todo-form").addEventListener("submit", (e) => {
                e.preventDefault();
                const id = Math.floor(Math.random() * 9999999999999999)
                const todo_task = document.querySelector("#todo_task").value;
                const priority = document.querySelector("#priority").value;
                const body = document.querySelector("#body").value;
                //validate 
                if (todo_task === "") {
                  TodoUI.validateMsg("Need to enter a todo", "danger")
                } else {

                  //add todo from storage
                  TodoUI.validateMsg("new Todo!", "success")
                          const todo = new Todo(id, todo_task, priority, body)
                  TodoUI.newTodo(todo);
                  Store.addTodo(todo);
                  TodoUI.clearForm();
                }
              })

              //event to remvove todo
              document.querySelector("#todos").addEventListener("click", (e) => {
                const todoKey = document.querySelector("#todoKey")
                console.log(todoKey.dataset.id);
               TodoUI.removeTodo(e.target);
                Store.removeStoreTodo(Number(todoKey.dataset.id));
                TodoUI.validateMsg("Todo was removed", "success");
              })
            </script>
  </body>

  </html>